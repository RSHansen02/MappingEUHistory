library(tidyverse)
library(leaflet)
library(htmlwidgets)
library(ggplot2)
library(shiny)
library(sf)
library(dplyr)
library(purrr)
dir.create("data")
library(tidyverse)
library(leaflet)
library(htmlwidgets)
library(ggplot2)
library(shiny)
library(sf)
library(dplyr)
library(purrr)
dir.create("data")
library(tidyverse)
library(leaflet)
library(htmlwidgets)
library(ggplot2)
library(shiny)
library(sf)
library(dplyr)
library(purrr)
#dir.create("data")
eu_data <- read.csv("data/eu_data.csv")
eu_data <- eu_data %>%
mutate(
group = as.character(year),
ref_result_yes = as.numeric(ref_result_yes),
ref_result_no = as.numeric(ref_result_no),
yes_percentage = round(ref_result_yes / total_votes * 100, 2),
no_percentage = round(ref_result_no / total_votes * 100, 2)
)
View(eu_data)
create_referendum_plot <- function(country, result_yes_percentage, result_no_percentage) {
ref_results <- data.frame(
Option = factor(c("Yes", "No"), levels = c("Yes", "No")),
Percentage = c(result_yes_percentage, result_no_percentage)
)
plot <- ggplot(ref_results, aes(x = Option, y = Percentage, fill = Option)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("Yes" = "green", "No" = "red")) +
scale_y_continuous(breaks = seq(0, 100, 25), labels = scales::label_percent(scale = 1, accuracy = 1)) +
labs(title = paste("Referendum Results for", country),
x = "Option", y = "Percentage") +
theme_minimal(base_family = "sans") +
theme(axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 12),
legend.position = "none") +
geom_text(aes(label = paste0(round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
size = 4, color = "black")
ggsave(paste0("www/", gsub("[^A-Za-z0-9]", "_", tolower(country)), "_referendum.png"), plot,
width = 4, height = 3, dpi = 300, bg = "white")
}
eu_data %>%
filter(accession_type == "Referendum") %>%
distinct(country, .keep_all = TRUE) %>%
pmap(~ create_referendum_plot(..2, ..10, ..11))
eu_data <- read.csv("data/eu_data.csv")
eu_data <- eu_data %>%
mutate(
group = as.character(year),
ref_result_yes = as.numeric(ref_result_yes),
ref_result_no = as.numeric(ref_result_no),
yes_percentage = round(ref_result_yes / total_votes * 100, 2),
no_percentage = round(ref_result_no / total_votes * 100, 2)
)
create_referendum_plot <- function(country, result_yes_percentage, result_no_percentage) {
ref_results <- data.frame(
Option = factor(c("Yes", "No"), levels = c("Yes", "No")),
Percentage = as.numeric(c(result_yes_percentage, result_no_percentage))
)
ref_results$Label <- paste0(round(ref_results$Percentage, 1), "%")
plot <- ggplot(ref_results, aes(x = Option, y = Percentage, fill = Option)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("Yes" = "green", "No" = "red")) +
scale_y_continuous(
breaks = seq(0, 100, 25),
labels = scales::label_percent(scale = 1, accuracy = 1)
) +
labs(
title = paste("Referendum Results for", country),
x = "Option", y = "Percentage"
) +
theme_minimal(base_family = "sans") +
theme(
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 12),
legend.position = "none"
) +
geom_text(aes(label = Label), position = position_stack(vjust = 0.5), size = 4, color = "black")
ggsave(
paste0("referendum_plots/", gsub("[^A-Za-z0-9]", "_", tolower(country)), "_referendum.png"),
plot,
width = 4, height = 3, dpi = 300, bg = "white"
)
}
eu_data %>%
filter(accession_type == "Referendum") %>%
distinct(country, .keep_all = TRUE) %>%
pmap(~ create_referendum_plot(..2, ..10, ..11))
